{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rahul\\\\Desktop\\\\ClaudeTokens\\\\dapp-frontend\\\\src\\\\components\\\\LiquidityPool.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Card, CardContent, Typography, TextField, Button, Box, CircularProgress } from '@mui/material';\nimport { useWallet } from '../contexts/WalletContext';\nimport { useContract } from '../hooks/useContract';\nimport { TOKEN_A_ADDRESS, TOKEN_B_ADDRESS, LIQUIDITY_POOL_ADDRESS } from '../utils/contractAddresses';\nimport TokenABI from '../utils/contractABIs/TokenA.json';\nimport TokenBABI from '../utils/contractABIs/TokenB.json';\nimport LiquidityPoolABI from '../utils/contractABIs/LiquidityPool.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LiquidityPool = () => {\n  _s();\n  const {\n    address,\n    provider\n  } = useWallet();\n  const [amountA, setAmountA] = useState('');\n  const [amountB, setAmountB] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const tokenAContract = useContract(TOKEN_A_ADDRESS, TokenABI);\n  const tokenBContract = useContract(TOKEN_B_ADDRESS, TokenBABI);\n  const liquidityPoolContract = useContract(LIQUIDITY_POOL_ADDRESS, LiquidityPoolABI);\n  const handleAddLiquidity = async () => {\n    if (!address || !provider) {\n      toast.error('Please connect your wallet first');\n      return;\n    }\n\n    // Validate input amounts\n    if (!amountA || !amountB) {\n      toast.error('Please enter amounts for both tokens');\n      return;\n    }\n\n    // Convert input to wei\n    let amountAWei, amountBWei;\n    try {\n      amountAWei = ethers.utils.parseUnits(amountA, 18);\n      amountBWei = ethers.utils.parseUnits(amountB, 18);\n    } catch (error) {\n      toast.error('Invalid token amounts');\n      return;\n    }\n    setIsLoading(true);\n    try {\n      // Step 1: Approve Token A spending\n      const approveTokenATx = await tokenAContract.approve(LIQUIDITY_POOL_ADDRESS, amountAWei);\n      await approveTokenATx.wait();\n      toast.info('Token A approval successful');\n\n      // Step 2: Approve Token B spending\n      const approveTokenBTx = await tokenBContract.approve(LIQUIDITY_POOL_ADDRESS, amountBWei);\n      await approveTokenBTx.wait();\n      toast.info('Token B approval successful');\n\n      // Step 3: Add Liquidity\n      const addLiquidityTx = await liquidityPoolContract.addLiquidity(amountAWei, amountBWei);\n\n      // Wait for transaction confirmation\n      const receipt = await addLiquidityTx.wait();\n\n      // Success notification\n      toast.success('Liquidity added successfully!', {\n        details: `Tx Hash: ${receipt.transactionHash}`\n      });\n\n      // Reset input fields\n      setAmountA('');\n      setAmountB('');\n    } catch (error) {\n      // Detailed error handling\n      console.error(\"Add liquidity error\", error);\n      if (error.code === 4001) {\n        toast.error('Transaction rejected by user');\n      } else if (error.message.includes('insufficient funds')) {\n        toast.error('Insufficient funds for transaction');\n      } else if (error.message.includes('allowance')) {\n        toast.error('Insufficient token allowance');\n      } else {\n        toast.error('Failed to add liquidity. Please try again.');\n      }\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    elevation: 3,\n    sx: {\n      p: 3\n    },\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        gutterBottom: true,\n        children: \"Add Liquidity\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          flexDirection: 'column',\n          gap: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Amount of Token A\",\n          variant: \"outlined\",\n          type: \"number\",\n          value: amountA,\n          onChange: e => setAmountA(e.target.value),\n          disabled: isLoading,\n          InputProps: {\n            inputProps: {\n              min: 0\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Amount of Token B\",\n          variant: \"outlined\",\n          type: \"number\",\n          value: amountB,\n          onChange: e => setAmountB(e.target.value),\n          disabled: isLoading,\n          InputProps: {\n            inputProps: {\n              min: 0\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: handleAddLiquidity,\n          disabled: isLoading || !address,\n          startIcon: isLoading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n            size: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 38\n          }, this) : null,\n          children: isLoading ? 'Adding Liquidity...' : 'Add Liquidity'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 7\n  }, this);\n};\n_s(LiquidityPool, \"HZlidTJZO4PLUsOSVLRnzI73AIo=\", false, function () {\n  return [useWallet, useContract, useContract, useContract];\n});\n_c = LiquidityPool;\nexport default LiquidityPool;\nvar _c;\n$RefreshReg$(_c, \"LiquidityPool\");","map":{"version":3,"names":["React","useState","Card","CardContent","Typography","TextField","Button","Box","CircularProgress","useWallet","useContract","TOKEN_A_ADDRESS","TOKEN_B_ADDRESS","LIQUIDITY_POOL_ADDRESS","TokenABI","TokenBABI","LiquidityPoolABI","jsxDEV","_jsxDEV","LiquidityPool","_s","address","provider","amountA","setAmountA","amountB","setAmountB","isLoading","setIsLoading","tokenAContract","tokenBContract","liquidityPoolContract","handleAddLiquidity","toast","error","amountAWei","amountBWei","ethers","utils","parseUnits","approveTokenATx","approve","wait","info","approveTokenBTx","addLiquidityTx","addLiquidity","receipt","success","details","transactionHash","console","code","message","includes","elevation","sx","p","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","display","flexDirection","gap","label","type","value","onChange","e","target","disabled","InputProps","inputProps","min","color","onClick","startIcon","size","_c","$RefreshReg$"],"sources":["C:/Users/Rahul/Desktop/ClaudeTokens/dapp-frontend/src/components/LiquidityPool.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { \r\n  Card, \r\n  CardContent, \r\n  Typography, \r\n  TextField, \r\n  Button, \r\n  Box,\r\n  CircularProgress \r\n} from '@mui/material';\r\nimport { useWallet } from '../contexts/WalletContext';\r\nimport { useContract } from '../hooks/useContract';\r\nimport { TOKEN_A_ADDRESS, TOKEN_B_ADDRESS, LIQUIDITY_POOL_ADDRESS } from '../utils/contractAddresses';\r\nimport TokenABI from '../utils/contractABIs/TokenA.json';\r\nimport TokenBABI from '../utils/contractABIs/TokenB.json';\r\nimport LiquidityPoolABI from '../utils/contractABIs/LiquidityPool.json';\r\n\r\nconst LiquidityPool = () => {\r\n  const { address, provider } = useWallet();\r\n  const [amountA, setAmountA] = useState('');\r\n  const [amountB, setAmountB] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const tokenAContract = useContract(TOKEN_A_ADDRESS, TokenABI);\r\n  const tokenBContract = useContract(TOKEN_B_ADDRESS, TokenBABI);\r\n  const liquidityPoolContract = useContract(LIQUIDITY_POOL_ADDRESS, LiquidityPoolABI);\r\n\r\n  const handleAddLiquidity = async () => {\r\n    if (!address || !provider) {\r\n        toast.error('Please connect your wallet first');\r\n        return;\r\n      }\r\n  \r\n      // Validate input amounts\r\n      if (!amountA || !amountB) {\r\n        toast.error('Please enter amounts for both tokens');\r\n        return;\r\n      }\r\n  \r\n      // Convert input to wei\r\n      let amountAWei, amountBWei;\r\n      try {\r\n        amountAWei = ethers.utils.parseUnits(amountA, 18);\r\n        amountBWei = ethers.utils.parseUnits(amountB, 18);\r\n      } catch (error) {\r\n        toast.error('Invalid token amounts');\r\n        return;\r\n      }\r\n  \r\n      setIsLoading(true);\r\n  \r\n      try {\r\n        // Step 1: Approve Token A spending\r\n        const approveTokenATx = await tokenAContract.approve(\r\n          LIQUIDITY_POOL_ADDRESS, \r\n          amountAWei\r\n        );\r\n        await approveTokenATx.wait();\r\n        toast.info('Token A approval successful');\r\n  \r\n        // Step 2: Approve Token B spending\r\n        const approveTokenBTx = await tokenBContract.approve(\r\n          LIQUIDITY_POOL_ADDRESS, \r\n          amountBWei\r\n        );\r\n        await approveTokenBTx.wait();\r\n        toast.info('Token B approval successful');\r\n  \r\n        // Step 3: Add Liquidity\r\n        const addLiquidityTx = await liquidityPoolContract.addLiquidity(\r\n          amountAWei, \r\n          amountBWei\r\n        );\r\n        \r\n        // Wait for transaction confirmation\r\n        const receipt = await addLiquidityTx.wait();\r\n  \r\n        // Success notification\r\n        toast.success('Liquidity added successfully!', {\r\n          details: `Tx Hash: ${receipt.transactionHash}`\r\n        });\r\n  \r\n        // Reset input fields\r\n        setAmountA('');\r\n        setAmountB('');\r\n      } catch (error) {\r\n        // Detailed error handling\r\n        console.error(\"Add liquidity error\", error);\r\n        \r\n        if (error.code === 4001) {\r\n          toast.error('Transaction rejected by user');\r\n        } else if (error.message.includes('insufficient funds')) {\r\n          toast.error('Insufficient funds for transaction');\r\n        } else if (error.message.includes('allowance')) {\r\n          toast.error('Insufficient token allowance');\r\n        } else {\r\n          toast.error('Failed to add liquidity. Please try again.');\r\n        }\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n  \r\n    return (\r\n      <Card elevation={3} sx={{ p: 3 }}>\r\n        <CardContent>\r\n          <Typography variant=\"h5\" gutterBottom>\r\n            Add Liquidity\r\n          </Typography>\r\n          <Box sx={{ display: 'flex', flexDirection: 'column', gap: 2 }}>\r\n            <TextField \r\n              label=\"Amount of Token A\" \r\n              variant=\"outlined\" \r\n              type=\"number\"\r\n              value={amountA} \r\n              onChange={(e) => setAmountA(e.target.value)}\r\n              disabled={isLoading}\r\n              InputProps={{\r\n                inputProps: { min: 0 }\r\n              }}\r\n            />\r\n            <TextField \r\n              label=\"Amount of Token B\" \r\n              variant=\"outlined\" \r\n              type=\"number\"\r\n              value={amountB} \r\n              onChange={(e) => setAmountB(e.target.value)}\r\n              disabled={isLoading}\r\n              InputProps={{\r\n                inputProps: { min: 0 }\r\n              }}\r\n            />\r\n            <Button \r\n              variant=\"contained\" \r\n              color=\"primary\" \r\n              onClick={handleAddLiquidity}\r\n              disabled={isLoading || !address}\r\n              startIcon={isLoading ? <CircularProgress size={20} /> : null}\r\n            >\r\n              {isLoading ? 'Adding Liquidity...' : 'Add Liquidity'}\r\n            </Button>\r\n          </Box>\r\n        </CardContent>\r\n      </Card>\r\n    );\r\n  };\r\n  \r\n  export default LiquidityPool;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}