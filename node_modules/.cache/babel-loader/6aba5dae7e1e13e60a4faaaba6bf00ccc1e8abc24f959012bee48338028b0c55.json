{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rahul\\\\Desktop\\\\ClaudeTokens\\\\dapp-frontend\\\\src\\\\components\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Grid, Paper, Typography, Box } from '@mui/material';\nimport { AccountBalance as AccountBalanceIcon, LocalAtm as LocalAtmIcon } from '@mui/icons-material';\nimport { useWallet } from './contexts/WalletContext';\nimport { useContract } from '../hooks/useContract';\nimport { TOKEN_A_ADDRESS, TOKEN_B_ADDRESS, LIQUIDITY_POOL_ADDRESS } from '../utils/contractAddresses';\nimport TokenABI from '../utils/contractABIs/TokenA.json';\nimport TokenBABI from '../utils/contractABIs/TokenB.json';\nimport LiquidityPoolABI from '../utils/contractABIs/LiquidityPool.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DashboardCard = ({\n  icon,\n  title,\n  value\n}) => /*#__PURE__*/_jsxDEV(Paper, {\n  elevation: 3,\n  sx: {\n    p: 3,\n    display: 'flex',\n    alignItems: 'center',\n    gap: 2,\n    background: 'linear-gradient(145deg, #1e1e1e 0%, #2a2a2a 100%)'\n  },\n  children: [icon, /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"subtitle1\",\n      color: \"textSecondary\",\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      fontWeight: \"bold\",\n      children: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 24,\n  columnNumber: 3\n}, this);\n_c = DashboardCard;\nconst Dashboard = () => {\n  _s();\n  const {\n    address,\n    provider\n  } = useWallet();\n  const [tokenABalance, setTokenABalance] = useState('0');\n  const [tokenBBalance, setTokenBBalance] = useState('0');\n  const [poolLiquidity, setPoolLiquidity] = useState('0');\n  const tokenAContract = useContract(TOKEN_A_ADDRESS, TokenABI);\n  const tokenBContract = useContract(TOKEN_B_ADDRESS, TokenBABI);\n  const liquidityPoolContract = useContract(LIQUIDITY_POOL_ADDRESS, LiquidityPoolABI);\n  useEffect(() => {\n    const fetchBalances = async () => {\n      if (!address || !provider) return;\n      try {\n        const aBalance = await tokenAContract.balanceOf(address);\n        const bBalance = await tokenBContract.balanceOf(address);\n        const totalLiquidity = await liquidityPoolContract.totalLiquidity();\n        setTokenABalance(aBalance.toString());\n        setTokenBBalance(bBalance.toString());\n        setPoolLiquidity(totalLiquidity.toString());\n      } catch (error) {\n        console.error(\"Dashboard data fetch error\", error);\n      }\n    };\n    fetchBalances();\n  }, [address, provider, tokenAContract, tokenBContract, liquidityPoolContract]);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: 3,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      md: 4,\n      children: /*#__PURE__*/_jsxDEV(DashboardCard, {\n        icon: /*#__PURE__*/_jsxDEV(LocalAtmIcon, {\n          fontSize: \"large\",\n          color: \"primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 17\n        }, this),\n        title: \"Token A Balance\",\n        value: tokenABalance\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      md: 4,\n      children: /*#__PURE__*/_jsxDEV(DashboardCard, {\n        icon: /*#__PURE__*/_jsxDEV(LocalAtmIcon, {\n          fontSize: \"large\",\n          color: \"secondary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 17\n        }, this),\n        title: \"Token B Balance\",\n        value: tokenBBalance\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      md: 4,\n      children: /*#__PURE__*/_jsxDEV(DashboardCard, {\n        icon: /*#__PURE__*/_jsxDEV(AccountBalanceIcon, {\n          fontSize: \"large\",\n          color: \"primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 17\n        }, this),\n        title: \"Total Pool Liquidity\",\n        value: poolLiquidity\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"qpBkoVTlGs33Fv67nVOSqReF11g=\", false, function () {\n  return [useWallet, useContract, useContract, useContract];\n});\n_c2 = Dashboard;\nexport default Dashboard;\nvar _c, _c2;\n$RefreshReg$(_c, \"DashboardCard\");\n$RefreshReg$(_c2, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","Grid","Paper","Typography","Box","AccountBalance","AccountBalanceIcon","LocalAtm","LocalAtmIcon","useWallet","useContract","TOKEN_A_ADDRESS","TOKEN_B_ADDRESS","LIQUIDITY_POOL_ADDRESS","TokenABI","TokenBABI","LiquidityPoolABI","jsxDEV","_jsxDEV","DashboardCard","icon","title","value","elevation","sx","p","display","alignItems","gap","background","children","variant","color","fileName","_jsxFileName","lineNumber","columnNumber","fontWeight","_c","Dashboard","_s","address","provider","tokenABalance","setTokenABalance","tokenBBalance","setTokenBBalance","poolLiquidity","setPoolLiquidity","tokenAContract","tokenBContract","liquidityPoolContract","fetchBalances","aBalance","balanceOf","bBalance","totalLiquidity","toString","error","console","container","spacing","item","xs","md","fontSize","_c2","$RefreshReg$"],"sources":["C:/Users/Rahul/Desktop/ClaudeTokens/dapp-frontend/src/components/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { \r\n  Grid, \r\n  Paper, \r\n  Typography, \r\n  Box \r\n} from '@mui/material';\r\nimport { \r\n  AccountBalance as AccountBalanceIcon,\r\n  LocalAtm as LocalAtmIcon \r\n} from '@mui/icons-material';\r\nimport { useWallet } from './contexts/WalletContext';\r\nimport { useContract } from '../hooks/useContract';\r\nimport { \r\n  TOKEN_A_ADDRESS, \r\n  TOKEN_B_ADDRESS, \r\n  LIQUIDITY_POOL_ADDRESS \r\n} from '../utils/contractAddresses';\r\nimport TokenABI from '../utils/contractABIs/TokenA.json';\r\nimport TokenBABI from '../utils/contractABIs/TokenB.json';\r\nimport LiquidityPoolABI from '../utils/contractABIs/LiquidityPool.json';\r\n\r\nconst DashboardCard = ({ icon, title, value }) => (\r\n  <Paper \r\n    elevation={3} \r\n    sx={{ \r\n      p: 3, \r\n      display: 'flex', \r\n      alignItems: 'center', \r\n      gap: 2,\r\n      background: 'linear-gradient(145deg, #1e1e1e 0%, #2a2a2a 100%)'\r\n    }}\r\n  >\r\n    {icon}\r\n    <Box>\r\n      <Typography variant=\"subtitle1\" color=\"textSecondary\">\r\n        {title}\r\n      </Typography>\r\n      <Typography variant=\"h5\" fontWeight=\"bold\">\r\n        {value}\r\n      </Typography>\r\n    </Box>\r\n  </Paper>\r\n);\r\n\r\nconst Dashboard = () => {\r\n  const { address, provider } = useWallet();\r\n  const [tokenABalance, setTokenABalance] = useState('0');\r\n  const [tokenBBalance, setTokenBBalance] = useState('0');\r\n  const [poolLiquidity, setPoolLiquidity] = useState('0');\r\n\r\n  const tokenAContract = useContract(TOKEN_A_ADDRESS, TokenABI);\r\n  const tokenBContract = useContract(TOKEN_B_ADDRESS, TokenBABI);\r\n  const liquidityPoolContract = useContract(LIQUIDITY_POOL_ADDRESS, LiquidityPoolABI);\r\n\r\n  useEffect(() => {\r\n    const fetchBalances = async () => {\r\n      if (!address || !provider) return;\r\n\r\n      try {\r\n        const aBalance = await tokenAContract.balanceOf(address);\r\n        const bBalance = await tokenBContract.balanceOf(address);\r\n        const totalLiquidity = await liquidityPoolContract.totalLiquidity();\r\n\r\n        setTokenABalance(aBalance.toString());\r\n        setTokenBBalance(bBalance.toString());\r\n        setPoolLiquidity(totalLiquidity.toString());\r\n      } catch (error) {\r\n        console.error(\"Dashboard data fetch error\", error);\r\n      }\r\n    };\r\n\r\n    fetchBalances();\r\n  }, [address, provider, tokenAContract, tokenBContract, liquidityPoolContract]);\r\n\r\n  return (\r\n    <Grid container spacing={3}>\r\n      <Grid item xs={12} md={4}>\r\n        <DashboardCard \r\n          icon={<LocalAtmIcon fontSize=\"large\" color=\"primary\" />}\r\n          title=\"Token A Balance\"\r\n          value={tokenABalance}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12} md={4}>\r\n        <DashboardCard \r\n          icon={<LocalAtmIcon fontSize=\"large\" color=\"secondary\" />}\r\n          title=\"Token B Balance\"\r\n          value={tokenBBalance}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12} md={4}>\r\n        <DashboardCard \r\n          icon={<AccountBalanceIcon fontSize=\"large\" color=\"primary\" />}\r\n          title=\"Total Pool Liquidity\"\r\n          value={poolLiquidity}\r\n        />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}