{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rahul\\\\Desktop\\\\ClaudeTokens\\\\dapp-frontend\\\\src\\\\contexts\\\\WalletContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport { BrowserProvider, formatEther } from 'ethers';\nimport Web3Modal from 'web3modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WalletContext = /*#__PURE__*/createContext();\nexport const WalletProvider = ({\n  children\n}) => {\n  _s();\n  const [address, setAddress] = useState('');\n  const [balance, setBalance] = useState('0');\n  const [provider, setProvider] = useState(null);\n  const connectWallet = async () => {\n    try {\n      const web3Modal = new Web3Modal();\n      const instance = await web3Modal.connect();\n      const ethersProvider = new BrowserProvider(instance);\n      const signer = await ethersProvider.getSigner();\n      const userAddress = await signer.getAddress();\n      const userBalance = await ethersProvider.getBalance(userAddress);\n      setAddress(userAddress);\n      setProvider(ethersProvider);\n      setBalance(formatEther(userBalance));\n    } catch (error) {\n      console.error(\"Wallet connection failed\", error);\n    }\n  };\n  const disconnectWallet = () => {\n    setAddress('');\n    setProvider(null);\n    setBalance('0');\n  };\n  return /*#__PURE__*/_jsxDEV(WalletContext.Provider, {\n    value: {\n      address,\n      balance,\n      provider,\n      connectWallet,\n      disconnectWallet\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(WalletProvider, \"na7i28++leAeMCAAv8wBGVpU18k=\");\n_c = WalletProvider;\nexport const useWallet = () => {\n  _s2();\n  return useContext(WalletContext);\n};\n_s2(useWallet, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"WalletProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","BrowserProvider","formatEther","Web3Modal","jsxDEV","_jsxDEV","WalletContext","WalletProvider","children","_s","address","setAddress","balance","setBalance","provider","setProvider","connectWallet","web3Modal","instance","connect","ethersProvider","signer","getSigner","userAddress","getAddress","userBalance","getBalance","error","console","disconnectWallet","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useWallet","_s2","$RefreshReg$"],"sources":["C:/Users/Rahul/Desktop/ClaudeTokens/dapp-frontend/src/contexts/WalletContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\r\nimport { BrowserProvider, formatEther } from 'ethers';\r\nimport Web3Modal from 'web3modal';\r\n\r\nconst WalletContext = createContext();\r\n\r\nexport const WalletProvider = ({ children }) => {\r\n  const [address, setAddress] = useState('');\r\n  const [balance, setBalance] = useState('0');\r\n  const [provider, setProvider] = useState(null);\r\n\r\n  const connectWallet = async () => {\r\n    try {\r\n      const web3Modal = new Web3Modal();\r\n      const instance = await web3Modal.connect();\r\n      const ethersProvider = new BrowserProvider(instance);\r\n      const signer = await ethersProvider.getSigner();\r\n      \r\n      const userAddress = await signer.getAddress();\r\n      const userBalance = await ethersProvider.getBalance(userAddress);\r\n      \r\n      setAddress(userAddress);\r\n      setProvider(ethersProvider);\r\n      setBalance(formatEther(userBalance));\r\n    } catch (error) {\r\n      console.error(\"Wallet connection failed\", error);\r\n    }\r\n  };\r\n\r\n  const disconnectWallet = () => {\r\n    setAddress('');\r\n    setProvider(null);\r\n    setBalance('0');\r\n  };\r\n\r\n  return (\r\n    <WalletContext.Provider value={{\r\n      address,\r\n      balance,\r\n      provider,\r\n      connectWallet,\r\n      disconnectWallet\r\n    }}>\r\n      {children}\r\n    </WalletContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useWallet = () => useContext(WalletContext);"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AAC7E,SAASC,eAAe,EAAEC,WAAW,QAAQ,QAAQ;AACrD,OAAOC,SAAS,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,aAAa,gBAAGT,aAAa,CAAC,CAAC;AAErC,OAAO,MAAMU,cAAc,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC9C,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,GAAG,CAAC;EAC3C,MAAM,CAACgB,QAAQ,EAAEC,WAAW,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EAE9C,MAAMkB,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI;MACF,MAAMC,SAAS,GAAG,IAAId,SAAS,CAAC,CAAC;MACjC,MAAMe,QAAQ,GAAG,MAAMD,SAAS,CAACE,OAAO,CAAC,CAAC;MAC1C,MAAMC,cAAc,GAAG,IAAInB,eAAe,CAACiB,QAAQ,CAAC;MACpD,MAAMG,MAAM,GAAG,MAAMD,cAAc,CAACE,SAAS,CAAC,CAAC;MAE/C,MAAMC,WAAW,GAAG,MAAMF,MAAM,CAACG,UAAU,CAAC,CAAC;MAC7C,MAAMC,WAAW,GAAG,MAAML,cAAc,CAACM,UAAU,CAACH,WAAW,CAAC;MAEhEZ,UAAU,CAACY,WAAW,CAAC;MACvBR,WAAW,CAACK,cAAc,CAAC;MAC3BP,UAAU,CAACX,WAAW,CAACuB,WAAW,CAAC,CAAC;IACtC,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAClD;EACF,CAAC;EAED,MAAME,gBAAgB,GAAGA,CAAA,KAAM;IAC7BlB,UAAU,CAAC,EAAE,CAAC;IACdI,WAAW,CAAC,IAAI,CAAC;IACjBF,UAAU,CAAC,GAAG,CAAC;EACjB,CAAC;EAED,oBACER,OAAA,CAACC,aAAa,CAACwB,QAAQ;IAACC,KAAK,EAAE;MAC7BrB,OAAO;MACPE,OAAO;MACPE,QAAQ;MACRE,aAAa;MACba;IACF,CAAE;IAAArB,QAAA,EACCA;EAAQ;IAAAwB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACa,CAAC;AAE7B,CAAC;AAAC1B,EAAA,CAxCWF,cAAc;AAAA6B,EAAA,GAAd7B,cAAc;AA0C3B,OAAO,MAAM8B,SAAS,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAMvC,UAAU,CAACO,aAAa,CAAC;AAAA;AAACgC,GAAA,CAA5CD,SAAS;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}