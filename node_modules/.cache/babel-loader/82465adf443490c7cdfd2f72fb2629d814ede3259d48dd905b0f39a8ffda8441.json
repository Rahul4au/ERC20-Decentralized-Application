{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { ethers } from 'ethers';\nimport { useWallet } from '../contexts/WalletContext';\nexport const useContract = (address, abi) => {\n  _s();\n  const {\n    provider\n  } = useWallet();\n  const [contract, setContract] = useState(null);\n  useEffect(() => {\n    if (provider) {\n      const signer = provider.getSigner();\n      const contractInstance = new ethers.Contract(address, abi, signer);\n      setContract(contractInstance);\n    }\n  }, [provider, address, abi]);\n  return contract;\n};\n_s(useContract, \"qz03zuvXER2MhfiyAn4lM8FFjO8=\", false, function () {\n  return [useWallet];\n});","map":{"version":3,"names":["useState","useEffect","ethers","useWallet","useContract","address","abi","_s","provider","contract","setContract","signer","getSigner","contractInstance","Contract"],"sources":["C:/Users/Rahul/Desktop/ClaudeTokens/dapp-frontend/src/hooks/useContract.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { ethers } from 'ethers';\r\nimport { useWallet } from '../contexts/WalletContext';\r\n\r\nexport const useContract = (address, abi) => {\r\n  const { provider } = useWallet();\r\n  const [contract, setContract] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (provider) {\r\n      const signer = provider.getSigner();\r\n      const contractInstance = new ethers.Contract(address, abi, signer);\r\n      setContract(contractInstance);\r\n    }\r\n  }, [provider, address, abi]);\r\n\r\n  return contract;\r\n};"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,MAAM,QAAQ,QAAQ;AAC/B,SAASC,SAAS,QAAQ,2BAA2B;AAErD,OAAO,MAAMC,WAAW,GAAGA,CAACC,OAAO,EAAEC,GAAG,KAAK;EAAAC,EAAA;EAC3C,MAAM;IAAEC;EAAS,CAAC,GAAGL,SAAS,CAAC,CAAC;EAChC,MAAM,CAACM,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAE9CC,SAAS,CAAC,MAAM;IACd,IAAIO,QAAQ,EAAE;MACZ,MAAMG,MAAM,GAAGH,QAAQ,CAACI,SAAS,CAAC,CAAC;MACnC,MAAMC,gBAAgB,GAAG,IAAIX,MAAM,CAACY,QAAQ,CAACT,OAAO,EAAEC,GAAG,EAAEK,MAAM,CAAC;MAClED,WAAW,CAACG,gBAAgB,CAAC;IAC/B;EACF,CAAC,EAAE,CAACL,QAAQ,EAAEH,OAAO,EAAEC,GAAG,CAAC,CAAC;EAE5B,OAAOG,QAAQ;AACjB,CAAC;AAACF,EAAA,CAbWH,WAAW;EAAA,QACDD,SAAS;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}