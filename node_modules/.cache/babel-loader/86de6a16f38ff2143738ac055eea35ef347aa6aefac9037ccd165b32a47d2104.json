{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rahul\\\\Desktop\\\\ClaudeTokens\\\\dapp-frontend\\\\src\\\\components\\\\TokenSwap.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Card, CardContent, Typography, TextField, Button, Box } from '@mui/material';\nimport SwapHorizIcon from '@mui/icons-material/SwapHoriz';\nimport { useWallet } from '../contexts/WalletContext';\nimport { useContract } from '../hooks/useContract';\nimport { TOKEN_A_ADDRESS, TOKEN_B_ADDRESS, LIQUIDITY_POOL_ADDRESS } from '../utils/contractAddresses';\nimport TokenABI from '../utils/contractABIs/TokenA.json';\nimport TokenBABI from '../utils/contractABIs/TokenB.json';\nimport LiquidityPoolABI from '../utils/contractABIs/LiquidityPool.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TokenSwap = () => {\n  _s();\n  const {\n    address,\n    provider\n  } = useWallet();\n  const [amountA, setAmountA] = useState('');\n  const [amountB, setAmountB] = useState('');\n  const tokenAContract = useContract(TOKEN_A_ADDRESS, TokenABI);\n  const tokenBContract = useContract(TOKEN_B_ADDRESS, TokenBABI);\n  const liquidityPoolContract = useContract(LIQUIDITY_POOL_ADDRESS, LiquidityPoolABI);\n  const handleSwap = async () => {\n    if (!address || !provider) return;\n    try {\n      // Implement swap logic here\n      // Example: await liquidityPoolContract.swap(amountA, amountB);\n      console.log(`Swapping ${amountA} Token A for ${amountB} Token B`);\n    } catch (error) {\n      console.error(\"Swap error\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    elevation: 3,\n    sx: {\n      p: 3\n    },\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        gutterBottom: true,\n        children: \"Token Swap\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          flexDirection: 'column',\n          gap: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Amount of Token A\",\n          variant: \"outlined\",\n          value: amountA,\n          onChange: e => setAmountA(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Amount of Token B\",\n          variant: \"outlined\",\n          value: amountB,\n          onChange: e => setAmountB(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          startIcon: /*#__PURE__*/_jsxDEV(SwapHorizIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 24\n          }, this),\n          onClick: handleSwap,\n          children: \"Swap\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(TokenSwap, \"Fcvf64ItOYMKq13D9MIKd38pueM=\", false, function () {\n  return [useWallet, useContract, useContract, useContract];\n});\n_c = TokenSwap;\nexport default TokenSwap;\nvar _c;\n$RefreshReg$(_c, \"TokenSwap\");","map":{"version":3,"names":["React","useState","Card","CardContent","Typography","TextField","Button","Box","SwapHorizIcon","useWallet","useContract","TOKEN_A_ADDRESS","TOKEN_B_ADDRESS","LIQUIDITY_POOL_ADDRESS","TokenABI","TokenBABI","LiquidityPoolABI","jsxDEV","_jsxDEV","TokenSwap","_s","address","provider","amountA","setAmountA","amountB","setAmountB","tokenAContract","tokenBContract","liquidityPoolContract","handleSwap","console","log","error","elevation","sx","p","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","display","flexDirection","gap","label","value","onChange","e","target","color","startIcon","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Rahul/Desktop/ClaudeTokens/dapp-frontend/src/components/TokenSwap.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { \r\n  Card, \r\n  CardContent, \r\n  Typography, \r\n  TextField, \r\n  Button, \r\n  Box \r\n} from '@mui/material';\r\nimport SwapHorizIcon from '@mui/icons-material/SwapHoriz';\r\nimport { useWallet } from '../contexts/WalletContext';\r\nimport { useContract } from '../hooks/useContract';\r\nimport { TOKEN_A_ADDRESS, TOKEN_B_ADDRESS, LIQUIDITY_POOL_ADDRESS } from '../utils/contractAddresses';\r\nimport TokenABI from '../utils/contractABIs/TokenA.json';\r\nimport TokenBABI from '../utils/contractABIs/TokenB.json';\r\nimport LiquidityPoolABI from '../utils/contractABIs/LiquidityPool.json';\r\n\r\nconst TokenSwap = () => {\r\n  const { address, provider } = useWallet();\r\n  const [amountA, setAmountA] = useState('');\r\n  const [amountB, setAmountB] = useState('');\r\n\r\n  const tokenAContract = useContract(TOKEN_A_ADDRESS, TokenABI);\r\n  const tokenBContract = useContract(TOKEN_B_ADDRESS, TokenBABI);\r\n  const liquidityPoolContract = useContract(LIQUIDITY_POOL_ADDRESS, LiquidityPoolABI);\r\n\r\n  const handleSwap = async () => {\r\n    if (!address || !provider) return;\r\n\r\n    try {\r\n      // Implement swap logic here\r\n      // Example: await liquidityPoolContract.swap(amountA, amountB);\r\n      console.log(`Swapping ${amountA} Token A for ${amountB} Token B`);\r\n    } catch (error) {\r\n      console.error(\"Swap error\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card elevation={3} sx={{ p: 3 }}>\r\n      <CardContent>\r\n        <Typography variant=\"h5\" gutterBottom>\r\n          Token Swap\r\n        </Typography>\r\n        <Box sx={{ display: 'flex', flexDirection: 'column', gap: 2 }}>\r\n          <TextField \r\n            label=\"Amount of Token A\" \r\n            variant=\"outlined\" \r\n            value={amountA} \r\n            onChange={(e) => setAmountA(e.target.value)} \r\n          />\r\n          <TextField \r\n            label=\"Amount of Token B\" \r\n            variant=\"outlined\" \r\n            value={amountB} \r\n            onChange={(e) => setAmountB(e.target.value)} \r\n          />\r\n          <Button \r\n            variant=\"contained\" \r\n            color=\"primary\" \r\n            startIcon={<SwapHorizIcon />} \r\n            onClick={handleSwap}\r\n          >\r\n            Swap\r\n          </Button>\r\n        </Box>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default TokenSwap;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}